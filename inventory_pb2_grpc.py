# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import inventory_pb2 as inventory__pb2


class InventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddProduct = channel.unary_unary(
                '/InventoryService/AddProduct',
                request_serializer=inventory__pb2.Product.SerializeToString,
                response_deserializer=inventory__pb2.Status.FromString,
                )
        self.GetProductById = channel.unary_unary(
                '/InventoryService/GetProductById',
                request_serializer=inventory__pb2.ProductIdentifier.SerializeToString,
                response_deserializer=inventory__pb2.Product.FromString,
                )
        self.UpdateProductQuantity = channel.unary_unary(
                '/InventoryService/UpdateProductQuantity',
                request_serializer=inventory__pb2.Quantity.SerializeToString,
                response_deserializer=inventory__pb2.Product.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/InventoryService/DeleteProduct',
                request_serializer=inventory__pb2.ProductIdentifier.SerializeToString,
                response_deserializer=inventory__pb2.Status.FromString,
                )
        self.GetAllProducts = channel.unary_stream(
                '/InventoryService/GetAllProducts',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=inventory__pb2.Product.FromString,
                )


class InventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddProduct(self, request, context):
        """Add a new product to the inventory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductById(self, request, context):
        """Get information about a specific product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProductQuantity(self, request, context):
        """Update the quantity of a product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """Delete a product from the inventory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllProducts(self, request, context):
        """Get a list of all products in the inventory
        rpc GetAllProducts(google.protobuf.Empty) returns stream Product (Status);
        rpc GetAllProducts(google.protobuf) returns (stream Product); 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProduct,
                    request_deserializer=inventory__pb2.Product.FromString,
                    response_serializer=inventory__pb2.Status.SerializeToString,
            ),
            'GetProductById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductById,
                    request_deserializer=inventory__pb2.ProductIdentifier.FromString,
                    response_serializer=inventory__pb2.Product.SerializeToString,
            ),
            'UpdateProductQuantity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProductQuantity,
                    request_deserializer=inventory__pb2.Quantity.FromString,
                    response_serializer=inventory__pb2.Product.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=inventory__pb2.ProductIdentifier.FromString,
                    response_serializer=inventory__pb2.Status.SerializeToString,
            ),
            'GetAllProducts': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllProducts,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=inventory__pb2.Product.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'InventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/AddProduct',
            inventory__pb2.Product.SerializeToString,
            inventory__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/GetProductById',
            inventory__pb2.ProductIdentifier.SerializeToString,
            inventory__pb2.Product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProductQuantity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/UpdateProductQuantity',
            inventory__pb2.Quantity.SerializeToString,
            inventory__pb2.Product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryService/DeleteProduct',
            inventory__pb2.ProductIdentifier.SerializeToString,
            inventory__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/InventoryService/GetAllProducts',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            inventory__pb2.Product.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
